import java.util.HashSet;public class L290WordPattern {    public class Solution {        public boolean wordPattern(String pattern, String str) {            String[] strs = str.split(" ");            if (strs.length != pattern.length())                return false;            boolean re = true;            int[] hash_point = new int[26];            HashSet<String> map = new HashSet<String>();            for (int i = 0; i < 26; ++i) {                hash_point[i] = -1;            }            for (int i = 0; i < pattern.length(); ++i) {                char cur = pattern.charAt(i);                int index = cur - 'a';                if (hash_point[index] != -1) {                    int j = hash_point[index];                    if (!strs[i].equals(strs[j])) {                        re = false;                        break;                    }                } else {                    if (map.contains(strs[i])) {                        re = false;                        break;                    }                    map.add(strs[i]);                    hash_point[index] = i;                }            }            return re;        }    }}